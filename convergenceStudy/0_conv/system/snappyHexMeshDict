/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
/*castellatedMesh true;
snap            true;
addLayers       false;*/

castellatedMesh true;
snap            true;
addLayers       true;/**/

geometry
{

    hull470.stl
    {
        type triSurfaceMesh;
        name hull;

        patchInfo
        {
            type wall;
        }
    }

}

castellatedMeshControls
{
    maxLocalCells 1000000000;
    maxGlobalCells 2000000000;
    minRefinementCells 0;
    nCellsBetweenLevels 5;
    features
    (
         {
             file "hull470.eMesh";
             level 2;
         }
    );
    refinementSurfaces
    {
        hull
        {
            level (1 1);
        }
    }
    resolveFeatureAngle 30;
    refinementRegions
    {
    }

    locationInMesh (10 0 0);
    allowFreeStandingZoneFaces false;
}




snapControls
{
    nSmoothPatch 5;
    nSmoothInternal 0;
    tolerance 1.0;
    nSolveIter 200;
    nRelaxIter 1;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
}



addLayersControls
{
    
    relativeSizes false;
    layers
    {
        hull
        {
            nSurfaceLayers 4;
        }
    }

    expansionRatio 1.2;
    firstLayerThickness	0.002;
    minThickness 0.00001;
    nGrow 0;
    featureAngle 360;
    slipFeatureAngle 20;
    nRelaxIter 5;
    nSmoothSurfaceNormals 5;
    nSmoothNormals 5;
    nSmoothThickness 10;
    maxThicknessToMedialRatio 0.3;
    minMedianAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
    nRelaxedIter 35;
    maxFaceThicknessRatio 0.5;
layerTerminationAngle -180;
nSmoothDisplacement 90;
}


meshQualityControls
{
    #include "meshQualityDict"
}

writeFlags
(
scalarLevels // write volScalarField with cellLevel for postprocessing
layerSets// write cellSets, faceSets of faces in layer
layerFields// write volScalarField for layer coverage
);


mergeTolerance 1E-6;


// ************************************************************************* //
