/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "../data"
dimensions      [0 1 -1 0 0 0 0];

internalField   uniform ($uAir 0 0);

boundaryField
{
    atmosphere
    {
	type			fixedValue;
        value			uniform ($uAir 0 0);
    }

    inlet_air
    {
	type fixedProfile;
	profile csvFile;
        profileCoeffs
        {
            nHeaderLine         0;          // Number of header lines
            refColumn           0;          // Reference column index
            componentColumns    (1 2 3);    // Component column indices
            separator           ",";        // Optional (defaults to ",")
            mergeSeparators     no;         // Merge multiple separators
            file                "$FOAM_CASE/constant/uProfile.csv";  // name of csv data file
            outOfBounds         clamp;      // Optional out-of-bounds handling
            interpolationScheme linear;     // Optional interpolation scheme
        }
        direction        (0 0 1);
        origin           0;
    }

    inlet_water
    {
        type                    fixedValue;
        value                   uniform ($uWater 0 0);
    }

    outlet
    {
        type            inletOutlet;
        value           $internalField;
        inletValue      uniform (0 0 0);
    }

    bottom
    {
	type		symmetryPlane;
    }

    side
    {
	type		empty;
    }
}


// ************************************************************************* //
