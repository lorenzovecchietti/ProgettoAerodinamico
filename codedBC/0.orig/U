/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

Umean 1.668;
mUmean -1.668;

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    atmosphere
    {
        type            pressureInletOutletVelocity;
        tangentialVelocity $internalField;
        value           uniform (0 0 0);
    }
    inlet
    {
        type             codedFixedValue;
        value           uniform (0 0 0);
        name           inlet;
        code            
        #{

            const fvPatch& boundaryPatch = patch();
            const vectorField& Cf = boundaryPatch.Cf();
            vectorField& field = *this;

            const scalar ymax     =   0;        // Max Height to apply cond
            const scalar vxWater     =   1;         // X-Velocity [m/s]
	    const scalar vxAir     =   0;         // X-Velocity [m/s]

            forAll(Cf, faceI) 
            {
                field[faceI] = Cf[faceI].y() < ymax ?  vector(vxWater, 0, 0) : vector(vxAir, 0, 0);
            }
        #};
    }
    outlet
    {
	type		zeroGradient;
/*        type            inletOutlet;
        inletValue      uniform (0 0 0);
*/        value           uniform (0 0 0);
    }
    bottom
    {
	type		symmetryPlane;
    }
    side
    {
	type		empty;
    }
}


// ************************************************************************* //
